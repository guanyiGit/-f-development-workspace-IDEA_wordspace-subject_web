<template>
    <div class="centoer">
        <p class="title">活动管理</p>
        <div class="btns">
            <el-button type="primary" size="mini" @click="add">新增</el-button>
            <!--<el-button type="primary" size="mini">模板下载</el-button>
            <el-button type="warning" size="mini">删除</el-button>-->
        </div>
        <div class="selecteds">
            <el-select v-model="params.type" popper-class="el-select" @change="sel" placeholder="活动分类">
                <el-option v-for="item in options1"
                           :label="item.text"
                           :key="item.value"
                           :value="item.value"
                >
                </el-option>
            </el-select>
            <el-select v-model="params.status" popper-class="el-select" @change="sel" placeholder="状态">
                <el-option v-for="item in options2"
                           :label="item.text"
                           :key="item.value"
                           :value="item.value"
                >
                </el-option>
            </el-select>
            <el-input class="saerch_input fr" placeholder="活动名称/创建人" v-model.trim="params.searchKey">
                <i class="el-icon-search" slot="suffix" @click="searchHandle" > </i>
            </el-input>
        </div>
        <div class="tablPerp">
            <table class="mtable">
                <tr>
                <!--<td></td>-->
                <td>活动分类</td>
                <td>活动名称</td>
                <td>总分</td>
                <td>考试时长(分钟)</td>
                <td>创建人</td>
                <td>创建时间</td>
                <td>活动生效时间</td>
                <td>活动失效时间</td>
                <td>状态</td>
                <td>操作</td>
            </tr>

                <tr v-for="(item,index) in list" :key="index">
                    <!--<td>{{index +1}}</td>-->
                    <td>{{ item.examType==0?'问卷调查':(item.examType==1?'在线考试':'知识竞赛')}}</td>
                    <td>{{item.examName}}</td>
                    <td>{{item.totalScore}}</td>
                    <td>{{item.examTime}}</td>
                    <td>{{item.createBy}}</td>
                    <td v-if="item.createTime">{{item.createTime | formatDate()}}</td>
                    <td v-else>{{item.createTime}}</td>
                    <td v-if="item.effectDate">{{item.effectDate | formatDate("yyyy-MM-dd HH:mm:ss")}}</td>
                    <td v-else>{{item.effectDate}}</td>
                    <td v-if="item.failureDate">{{item.failureDate | formatDate("yyyy-MM-dd HH:mm:ss")}}</td>
                    <td v-else>{{item.failureDate}}</td>
                    <td>{{item.examStatus==0?'未发布':(item.examStatus==1?'考试中':'已关闭')}}</td>
                    <td style="color: #38C6B6" v-if="item.examStatus==0">
                        <span class="cp mgl5" @click="release(item,1)">发布考试</span>
                        <span class="cp mgl5" @click="toDetail(item)">查看</span>
                        <span class="cp mgl5"  @click="toDelete(item.examId)">删除</span>
                    </td>
                    <td style="color: #38C6B6" v-else-if="item.examStatus==1">
                        <span class="cp mgl5" @click="close(item,2)">关闭考试</span>
                        <span class="cp mgl5" @click="toDetail(item)">查看</span>
                    </td>
                    <td style="color: #38C6B6" v-else>
                        <span class="cp mgl5" @click="toDetail(item)">查看</span>
                    </td>
                </tr>
            </table>

        </div>
        <div>
            <!--<pageVue></pageVue>-->
            <page-vue :pageData="pageData" @chekdpageCallcak="changedPage"></page-vue>
        </div>
    </div>
</template>

<script>
    export default {
        name: "Exam",
        data() {
            return {
                params2:{
                    id:0,
                    status:0,
                    sign:0
                },

                params:{//请求参数
                    type:999,
                    status:999,
                    pageNum: 1,
                    pageSize:6,
                    searchKey:null
                },
                totalCount:0,
                list:[],
                options1:[
                    {value:999,text:"全部"},
                    {value:0,text:"问卷调查"},
                    {value:1,text:"在线考试"},
                    {value:2,text:"知识竞赛"}
                ],
                options2:[
                    {value:999,text:"全部"},
                    {value:0,text:"未发布"},
                    {value:1,text:"考试中"},
                    {value:2,text:"已关闭"}
                ],


            }
        },
        created() {
            initData(this)
        },
        mounted() {

        },
        computed: {
            //分页参数
            pageData() {
                return {
                    curPage: this.params.pageNum,//当前页吗
                    totalCount: this.totalCount,//总条数
                    pageSize: this.params.pageSize,//页面大小}

                }
            },

        },
        methods:{
            changedPage(pageNum){
                this.params.pageNum = pageNum;
                initData(this);
            },
            add: function(){
                this.$router.push("addActiviti");
            },
            sel:function () {
                initData(this)
            },
            searchHandle:function () {
                initData(this)
            },
            toDetail:function (item) {
                this.$router.push({name:"activitiDetail",params:{info:JSON.stringify(item)}});
            },
            release:function(item,status){
                this.params2.id=item.examId;
                this.params2.status=status;
                    this.params2.sign=1;
                    if(item.failureDate !=null){
                        //考试已经失效
                        if(new Date().getTime()>=item.failureDate){
                            this.$alert('该活动已经失效,不能发布!')
                            return
                        }

                    }
                updateStatus(this)
            },
            close:function (item,status) {
                this.params2.id=item.examId;
                this.params2.status=status;
                if(item.failureDate==null){
                    this.params2.sign=1;
                }
                updateStatus(this)
            },
            toDelete:function (examId) {
                this.$confirm('确定删除吗？').then(_ => {

                    this.$axios({
                        url: '/biz/activity/deleteExam',
                        params: {id:examId}
                    }).then((res) => {
                        if (res.code==200) {
                            if(res.obj!=0){
                                this.$alert('删除成功!')
                                initData(this)
                            }else{
                                this.$alert('删除失败!')
                            }
                        }

                    }).catch((err) => {
                        console.log(err);
                    })



                }).catch(_ => {
                });
            }
        }
    }

 function updateStatus(_this) {
     var opt=null;
        if(_this.params2.status==1){
             opt='发布';
        }else{
            opt='关闭';
        }

     _this.$confirm('确定'+opt+'吗？').then(_ => {

         _this.$axios({
             url: '/biz/activity/updateStatus',
             params: _this.params2
         }).then((res) => {
             if (res.code==200) {
                 if(res.obj!=0){
                     _this.$alert(opt+'成功!')
                     initData(_this)
                 }else{
                     _this.$alert(opt+'失败!')
                 }
             }

         }).catch((err) => {
             console.log(err);
         })



     }).catch(_ => {
     });

 }
   function initData(_this) {
        //_this.params.searchKey=_this.params.searchKey.trim()
        _this.$axios({
            method: 'post',
            url: '/biz/activity/findExamList',
            params: _this.params
        }).then((res) => {
            if (res.code==200) {
                _this.totalCount=res.obj.total;
                _this.list=res.obj.list;
            }
        }).catch((err) => {
            console.log(err);
        })
    }
</script>

<style scoped>
    .cp {
        cursor: pointer;
    }
</style>